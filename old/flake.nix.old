{
  description = "DrunkNix flake";

  inputs = {
    # NixOS official package source, here using the nixos-23.11 branch
    nixpkgs-unstable.url = "nixpkgs/nixos-unstable";
    nixpkgs.url = "nixpkgs/nixos-24.11";

#    nix-cosmic = {
#      url = "github:lilyinstarlight/nixos-cosmic";
#      inputs.nixpkgs.follows = "nixpkgs-unstable";
#     };

    home-manager.url = "github:nix-community/home-manager/release-24.11";
    home-manager.inputs.nixpkgs.follows = "nixpkgs";
    
   stylix = {
     url = "github:danth/stylix/release-24.11";
     inputs.nixpkgs.follows = "nixpkgs";
    };

  nix-flatpak.url = "github:gmodena/nix-flatpak/?ref=v0.5.2";

  hyprpanel.url = "github:Jas-SinghFSU/HyprPanel";


  };

  outputs = { self, nixpkgs, nixpkgs-unstable, #nix-cosmic,
              home-manager, stylix, nix-flatpak, ... }@inputs :

    let
	system = "x86_64-linux";
	commonArgs = {inherit system; config.allowUnfree= true;};
	pkgs = import nixpkgs (commonArgs // {
        overlays = [
         inputs.hyprpanel.overlay
        ];
      });
	pkgs-unstable = import nixpkgs-unstable commonArgs;
        lib = nixpkgs.lib;
	username = "drunk"; 
   in 

     {
    # The host with the hostname `my-nixos` will use this configuration
    nixosConfigurations.Drunknix = lib.nixosSystem {
        inherit pkgs;
        modules = [
      #    {
      #      nix.settings = {
      #        substituters = [ "https://cosmic.cachix.org/" ];
      #        trusted-public-keys = [ "cosmic.cachix.org-1:Dya9IyXD4xdBehWjrkPv6rtxpmMdRel02smYzA85dPE=" ];
      #      };
      #    }
         # nix-cosmic.nixosModules.default  ./configuration.nix
        
          stylix.nixosModules.stylix
          nix-flatpak.nixosModules.nix-flatpak


          ./configuration.nix
          home-manager.nixosModules.home-manager
         {
            home-manager.useGlobalPkgs = true;
            home-manager.backupFileExtension = "fk";
            home-manager.useUserPackages = true;
            home-manager.users.drunk = import ./home.nix;

            # Optionally, use home-manager.extraSpecialArgs to pass
            # arguments to home.nix
          }
           ];
          
          
        specialArgs = { inherit pkgs-unstable;  }; 
      };
    };
  }

